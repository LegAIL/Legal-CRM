"use strict";(()=>{var e={};e.id=5409,e.ids=[5409],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},95317:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>v,patchFetch:()=>w,requestAsyncStorage:()=>h,routeModule:()=>g,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var t={};s.r(t),s.d(t,{POST:()=>c});var a=s(49303),n=s(88716),i=s(60670),o=s(87070),u=s(42023),p=s.n(u),l=s(9487),d=s(53524);async function c(e){try{let{email:r,password:s,firstName:t,lastName:a,role:n}=await e.json();if(!r||!s||!t||!a)return o.NextResponse.json({error:"Missing required fields"},{status:400});if(await l._.user.findUnique({where:{email:r}}))return o.NextResponse.json({error:"User already exists with this email"},{status:400});let i=d.UserRole.USER;n&&Object.values(d.UserRole).includes(n)&&(i=n);let u=await p().hash(s,10),{password:c,...g}=await l._.user.create({data:{email:r,password:u,firstName:t,lastName:a,name:`${t} ${a}`,role:i}});return o.NextResponse.json({user:g,message:"User created successfully"},{status:201})}catch(e){return console.error("Signup error:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}let g=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/signup/route",pathname:"/api/signup",filename:"route",bundlePath:"app/api/signup/route"},resolvedPagePath:"/Users/thinhledinh/Desktop/laware_crm_google/app/api/signup/route.ts",nextConfigOutput:"standalone",userland:t}),{requestAsyncStorage:h,staticGenerationAsyncStorage:m,serverHooks:x}=g,v="/api/signup/route";function w(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}},9487:(e,r,s)=>{s.d(r,{_:()=>a});var t=s(53524);let a=globalThis.prisma??new t.PrismaClient}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[9276,2776,5972],()=>s(95317));module.exports=t})();